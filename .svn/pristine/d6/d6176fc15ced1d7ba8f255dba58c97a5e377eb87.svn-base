<template>
  <div class="popCover">
    <div class="mask"></div>
    <div class="popContent">
      <h3 class="popTitle"></h3>
      <div class="content">
        <div class="subContent clearfix">
          <ul v-for="(item,index) in popData.options" :key="index">
            <li v-if="item.status == 1" class="popBox">
              <span>{{item.title}}：</span>
              <el-input v-model.trim="popReq[item.val]" size="mini" v-bind:placeholder="item.placeholder" :disabled="item.disabled" :suffix-icon="item.star">
                <i v-if="item.visible" class="el-icon-star-off el-input__icon" slot="suffix"></i>
                <i v-if="item.editable" class="el-icon-edit el-input__icon" slot="suffix"></i>
              </el-input>
            </li>
            <li v-if="item.status == 2">
              <span>{{item.title}}：</span>
              <el-select class="popBox" v-model="popReq[item.val]" v-bind:placeholder="item.placeholder" size="mini">
                <el-option v-for="itemSel in item.list" :key="itemSel.value" :label="itemSel.label" :value="itemSel.value"></el-option>
              </el-select>
            </li>
            <li v-if="item.status == 3" class="popBox">
              <span>{{item.title}}：</span>
              <el-date-picker v-model="popReq[item.val1]" type="date" v-bind:placeholder="item.placeholderS" size="mini"></el-date-picker>
              <i>至</i>
              <el-date-picker v-model="popReq[item.val2]" type="date" v-bind:placeholder="item.placeholderE" size="mini"></el-date-picker>
            </li>
            <li v-if="item.status == 4" class="popBox">
              <span>{{item.title}}：</span>
              <el-date-picker v-model="popReq[item.val1]" type="month" v-bind:placeholder="item.placeholderS" size="mini"></el-date-picker>
              <i>至</i>
              <el-date-picker v-model="popReq[item.val2]" type="month" v-bind:placeholder="item.placeholderE" size="mini"></el-date-picker>
            </li>
            <li v-if="item.status == 5" class="popBox">
              <span>{{item.title}}：</span>
              <el-date-picker v-model="popReq[item.val]" value-format="yyyy-MM-dd" type="date" v-bind:placeholder="item.placeholder" size="mini"></el-date-picker>
            </li>
            <li v-if="item.status == 6" class="popBox">
              <span>{{item.title}}：</span>
              <div style="height: 35px;line-height: 35px;">
                <el-radio-group v-model="popReq[item.val]">
                  <el-radio style="width:50px;" :label="item.list[0].value"> {{item.list[0].label}} </el-radio>
                  <el-radio style="width:50px;" :label="item.list[1].value"> {{item.list[1].label}} </el-radio>
                </el-radio-group>
              </div>
            </li>
            <!-- 密码 -->
            <li v-if="item.status == 7" class="popBox">
              <span>{{item.title}}：</span>
              <el-input v-model="popReq[item.val]" type="password" size="mini" v-bind:placeholder="item.placeholder">
                <i v-if="item.visible" class="el-icon-star-off el-input__icon" slot="suffix"></i>
              </el-input>
            </li>
            <!--下拉多选-->
            <li v-if="item.status == 8">
              <span>{{item.title}}：</span>
              <el-select class="popBox" multiple v-model="popReq[item.val]" v-bind:placeholder="item.placeholder" size="mini">
                <el-option v-for="itemSel in item.list" :key="itemSel.value" :label="itemSel.label" :value="itemSel.value"></el-option>
              </el-select>
            </li>
            <li v-if="item.status == 9" class="popBox">
              <span>{{item.title}}：</span>
              <el-input v-model="popReq[item.val]" size="mini" v-bind:placeholder="item.placeholder" :disabled="item.disabled" @focus="createFn" :suffix-icon="item.star">
                <i v-if="item.editable" class="el-icon-star-off el-input__icon" slot="suffix"></i>
              </el-input>
              <el-popover placement="right" width="230" trigger="click">
                <el-tree :data="treeData" :props="defaultProps" @node-click="handleNodeClick" :default-expand-all="true" :highlight-current="true" :expand-on-click-node="false"></el-tree>
                <el-button slot="reference">编辑部门名称</el-button>
              </el-popover>
            </li>
            <li v-if="item.status == 10" class="popBox">
              <span>{{item.title}}：</span>
              <el-date-picker v-model="popReq[item.val]" type="datetime" v-bind:placeholder="item.placeholderS" size="mini" value-format="yyyy.MM.dd HH:mm:ss"></el-date-picker>
            </li>
            <li v-if="item.status == 11" class="popBox">
              <span>{{item.title}}：</span>
              <el-button size="mini" type="primary" v-on:click="btnsFn(item.fn)">{{item.placeholder}}</el-button>
            </li>
            <li v-if="item.status == 11 && returnDeptsIds && returnDeptsIds.length != 0" class="popBox">
              <span>已选择：</span>
              <el-tag class="delTag" v-for="(tag,index) in returnDeptsIds" :key="tag.label" closable @close="tagCloseFn(index)">
                {{tag.label}}
              </el-tag>
            </li>
            <li v-if="item.status == 12" class="popBox Litag">
              <span>{{item.title}}：</span>
              <el-tag v-bind:class="{on:index==tagIndex}" v-for="(tag,index) in item.list" :key="tag" @click="tagClick(tag,index)">
                {{tag}}
              </el-tag>
            </li>
            <li v-if="item.status == 13" class="popBox cascader">
              <span>{{item.title}}：</span>
              <el-cascader size="large" :options="options" v-model="popReq[item.val]" @change="handleChange"></el-cascader>
            </li>
            <li v-if="item.status == 14" class="popBox">
              <span>{{item.title}}：</span>
              <el-input v-model="popReq[item.val]" size="mini" v-bind:placeholder="item.placeholder" :disabled="item.disabled" @focus="createFn" :suffix-icon="item.star" style="width:260px;float:left;">
                <i v-if="item.editable" class="el-icon-star-off el-input__icon" slot="suffix"></i>
              </el-input>
              <el-popover placement="right" width="230" trigger="click">
                <el-tree :data="treeData" :props="defaultProps" @node-click="handleNodeClick" :default-expand-all="true" :highlight-current="true" :expand-on-click-node="false"></el-tree>
                <el-button size="mini" slot="reference">编辑部门名称</el-button>
              </el-popover>
            </li>
          </ul>
          <ul v-if="isUpload">
            <li>
              <span>上传文件：</span>
              <el-upload class="upload-demo" :action="uploadUrl" :on-success="successFileFn" :before-upload="beforeFileUpload" :show-file-list="false">
                <el-button size="mini" type="primary">点击上传</el-button>
              </el-upload>
            </li>
          </ul>
        </div>
        <div class="popBtn">
          <a href="javascript:;" v-on:click="onSubmit">确定</a>
          <a href="javascript:;" v-on:click="onCancle">取消</a>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
  import { mapState, mapActions } from 'vuex';
  import { regionData, CodeToText } from 'element-china-area-data';
  export default {
    data() {
      return {
        popReq: {},
        loading: false,
        optionsShow: [],
        treeData: [],
        defaultProps: {
          children: 'children',
          label: 'label'
        },
        // uploadUrl: 'http://192.168.0.100:81/airPortService/inter/upload ',
        uploadUrl: window.location.host + '/airPortService/inter/upload',
        options: regionData,
        selectedOptions: [],
        userRank: '',
        tagIndex: -1
      };
    },
    props: ['popData', 'formData', 'isUpload', 'returnDeptsIds', 'deptsIds'],
    created() {
      this.popReq = JSON.parse(JSON.stringify(this.formData));
      this.getSysOrgFn();
    },
    methods: {
      ...mapActions(['_getInfo']),
      onSubmit() {
        if(this.userRank) {
          this.popReq.userRank = this.userRank;
        }
        this.$emit('save', this.popReq);
      },
      onCancle() {
        this.$emit('cancle', false);
      },
      btnsFn(val) {
        this.$emit('getBtnFn', val);
      },
      radio(data) {
        console.log(data);
      },
      createFn() {

      },
      //获取组织树
      getSysOrgFn() {
        this._getInfo({
          method: 'get',
          api: 'getSysOrg',
          callback: res => {
            this.treeData = JSON.parse(res.treeData);
          }
        });
      },
      handleNodeClick(data) {
        this.popReq.orgName = data.label;
        this.popReq.orgCode = data.code;
        this.popReq.orgId = data.id;
      },
      //-------------上传-------------//
      //文件
      successFileFn(file) {
        // 通知文件
        this.popReq.noticeFile = file.url;
      },
      beforeFileUpload() {

      },
      tagCloseFn(index) {
        this.returnDeptsIds.splice(index, 1);
        this.$emit('delDept', this.returnDeptsIds)
      },
      handleChange(value) {
        // var ctt = CodeToText[value[0]] + CodeToText[value[1]] + CodeToText[value[2]];
        // console.log(ctt);
      },
      tagClick(data, index) {
        this.userRank = data;
        this.tagIndex = index;
      }
    }
  };
</script>
<style lang="less" scoped>
  .on {
    background: #1c6492 !important;
  }
  .mask {
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1998;
  }
  .popContent {
    position: fixed;
    background: #fff;
    width: 600px;
    left: 50%;
    margin-left: -300px;
    top: 2rem;
    z-index: 1999;
    border-radius: 8px;
    overflow: hidden;
    h3 {
      height: 40px;
      line-height: 40px;
      background: #2f4553;
      color: #fff;
      font-size: 20px;
      text-indent: 2px;
      font-weight: normal;
    }
    .content {
      padding: 5px 0;
      background: #cfd6f3;
      .subContent {
        ul {
          li {
            padding-left: 5px;
            color: #2f4553;
            margin-bottom: 5px;
            overflow: hidden;
            span {
              float: left;
              font-size: 18px;
              height: 35px;
              line-height: 35px;
              width: 140px;
              text-align: right;
            }
          }
          .Litag {
            span:first-child {
              width: 140px !important;
              font-size: 18px;
              padding: 0 !important;
            }
            span {
              width: auto !important;
              margin-right: 3px;
              font-size: 12px;
              padding: 0 7px !important;
            }
          }
        }
      }
      .popBtn {
        text-align: center;
        margin-top: 10px;
        margin-bottom: 15px;
        a {
          display: inline-block;
          width: 120px;
          height: 38px;
          line-height: 38px;
          background: #2f4553;
          color: #fff;
          text-align: center;
          border-radius: 5px;
          box-shadow: 1px 3px 1px rgba(0, 0, 0, 0.3);
        }
        a:hover {
          text-decoration: none;
        }
        a:nth-child(1) {
          margin-right: 80px;
        }
      }
    }
  }

  // // 分割线
  .el-input--mini {
    width: 400px;
    background: #fff;
    border-radius: 5px;
  }
  .el-select--mini {
    width: 400px;
    background: #fff;
    border-radius: 5px;
  }
  .el-date-editor.el-input,
  .el-date-editor.el-input__inner {
    width: 400px;
    vertical-align: top;
    border-radius: 5px;
  }
  .el-input--mini .el-input__inner {
    height: 35px !important;
    line-height: 35px !important;
  }
</style>
<style lang="less">
  input[type="file"] {
    display: none !important;
  }
  .el-cascader {
    width: 400px !important;
    height: 28px !important;
    line-height: 28px !important;
  }
  .cascader .el-input__inner {
    height: 28px !important;
    line-height: 28px !important;
  }
  .el-cascader__label {
    height: 28px !important;
    line-height: 28px !important;
    font-size: 14px;
  }
  #organize .delTag {
    width: auto !important;
    margin-right: 6px;
  }
  .popCover {
    .el-input__inner {
      font-size: 14px !important;
    }
  }
</style>
